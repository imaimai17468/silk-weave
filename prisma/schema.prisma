generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider                         = "zod-prisma-types"
  output                           = "../src/types/zod"
  createInputTypes                 = false
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Channel {
  id       String    @id @default(cuid())
  /// @zod.string.min(1, { message: "チャンネルを選択してください" })
  name     String
  threads  Thread[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt @default(now())
}

model Thread {
  id         String   @id @default(cuid())
  title      String
  user       String
  channel    Channel  @relation(fields: [channelId], references: [id])
  channelId  String
  tags       String[]
  detail     Detail?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt @default(now())
}

model Detail {
  id           String   @id @default(cuid())
  thread       Thread   @relation(fields: [threadId], references: [id])
  threadId     String   @unique
  contents     String?
  viewInSlackUrl String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt @default(now())
}
